{"remainingRequest":"/Users/jessicaleon/Desktop/challenge/selliaChat.JS/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jessicaleon/Desktop/challenge/selliaChat.JS/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jessicaleon/Desktop/challenge/selliaChat.JS/src/App.vue","mtime":1661216192712},{"path":"/Users/jessicaleon/Desktop/challenge/selliaChat.JS/node_modules/cache-loader/dist/cjs.js","mtime":1661216214000},{"path":"/Users/jessicaleon/Desktop/challenge/selliaChat.JS/node_modules/babel-loader/lib/index.js","mtime":1661216214248},{"path":"/Users/jessicaleon/Desktop/challenge/selliaChat.JS/node_modules/cache-loader/dist/cjs.js","mtime":1661216214000},{"path":"/Users/jessicaleon/Desktop/challenge/selliaChat.JS/node_modules/vue-loader/lib/index.js","mtime":1661216214312}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBTZWxlY3RVc2VybmFtZSBmcm9tICIuL2NvbXBvbmVudHMvU2VsZWN0VXNlcm5hbWUiOwppbXBvcnQgQ2hhdCBmcm9tICIuL2NvbXBvbmVudHMvQ2hhdCI7CmltcG9ydCBzb2NrZXQgZnJvbSAiLi9zb2NrZXQiOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJBcHAiLAogIGNvbXBvbmVudHM6IHsKICAgIENoYXQsCiAgICBTZWxlY3RVc2VybmFtZSwKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB1c2VybmFtZUFscmVhZHlTZWxlY3RlZDogZmFsc2UsCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgb25Vc2VybmFtZVNlbGVjdGlvbih1c2VybmFtZSkgewogICAgICB0aGlzLnVzZXJuYW1lQWxyZWFkeVNlbGVjdGVkID0gdHJ1ZTsKICAgICAgc29ja2V0LmF1dGggPSB7IHVzZXJuYW1lIH07CiAgICAgIHNvY2tldC5jb25uZWN0KCk7CiAgICB9LAogIH0sCiAgY3JlYXRlZCgpIHsKICAgIGNvbnN0IHNlc3Npb25JRCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJzZXNzaW9uSUQiKTsKCiAgICBpZiAoc2Vzc2lvbklEKSB7CiAgICAgIHRoaXMudXNlcm5hbWVBbHJlYWR5U2VsZWN0ZWQgPSB0cnVlOwogICAgICBzb2NrZXQuYXV0aCA9IHsgc2Vzc2lvbklEIH07CiAgICAgIHNvY2tldC5jb25uZWN0KCk7CiAgICB9CgogICAgc29ja2V0Lm9uKCJzZXNzaW9uIiwgKHsgc2Vzc2lvbklELCB1c2VySUQgfSkgPT4gewogICAgICAvLyBhdHRhY2ggdGhlIHNlc3Npb24gSUQgdG8gdGhlIG5leHQgcmVjb25uZWN0aW9uIGF0dGVtcHRzCiAgICAgIHNvY2tldC5hdXRoID0geyBzZXNzaW9uSUQgfTsKICAgICAgLy8gc3RvcmUgaXQgaW4gdGhlIGxvY2FsU3RvcmFnZQogICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgic2Vzc2lvbklEIiwgc2Vzc2lvbklEKTsKICAgICAgLy8gc2F2ZSB0aGUgSUQgb2YgdGhlIHVzZXIKICAgICAgc29ja2V0LnVzZXJJRCA9IHVzZXJJRDsKICAgIH0pOwoKICAgIHNvY2tldC5vbigiY29ubmVjdF9lcnJvciIsIChlcnIpID0+IHsKICAgICAgaWYgKGVyci5tZXNzYWdlID09PSAiaW52YWxpZCB1c2VybmFtZSIpIHsKICAgICAgICB0aGlzLnVzZXJuYW1lQWxyZWFkeVNlbGVjdGVkID0gZmFsc2U7CiAgICAgIH0KICAgIH0pOwogIH0sCiAgZGVzdHJveWVkKCkgewogICAgc29ja2V0Lm9mZigiY29ubmVjdF9lcnJvciIpOwogIH0sCn07Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <select-username\n      v-if=\"!usernameAlreadySelected\"\n      @input=\"onUsernameSelection\"\n    />\n    <chat v-else />\n  </div>\n</template>\n\n<script>\nimport SelectUsername from \"./components/SelectUsername\";\nimport Chat from \"./components/Chat\";\nimport socket from \"./socket\";\n\nexport default {\n  name: \"App\",\n  components: {\n    Chat,\n    SelectUsername,\n  },\n  data() {\n    return {\n      usernameAlreadySelected: false,\n    };\n  },\n  methods: {\n    onUsernameSelection(username) {\n      this.usernameAlreadySelected = true;\n      socket.auth = { username };\n      socket.connect();\n    },\n  },\n  created() {\n    const sessionID = localStorage.getItem(\"sessionID\");\n\n    if (sessionID) {\n      this.usernameAlreadySelected = true;\n      socket.auth = { sessionID };\n      socket.connect();\n    }\n\n    socket.on(\"session\", ({ sessionID, userID }) => {\n      // attach the session ID to the next reconnection attempts\n      socket.auth = { sessionID };\n      // store it in the localStorage\n      localStorage.setItem(\"sessionID\", sessionID);\n      // save the ID of the user\n      socket.userID = userID;\n    });\n\n    socket.on(\"connect_error\", (err) => {\n      if (err.message === \"invalid username\") {\n        this.usernameAlreadySelected = false;\n      }\n    });\n  },\n  destroyed() {\n    socket.off(\"connect_error\");\n  },\n};\n</script>\n\n<style>\nbody {\n  margin: 0;\n}\n\n@font-face {\n  font-family: Lato;\n  src: url(\"/fonts/Lato-Regular.ttf\");\n}\n\n#app {\n  font-family: Lato, Arial, sans-serif;\n  font-size: 14px;\n}\n</style>\n"]}]}