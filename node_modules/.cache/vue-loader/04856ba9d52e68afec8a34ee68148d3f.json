{"remainingRequest":"/Users/jessicaleon/Desktop/challenge/seliaChat.JS/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jessicaleon/Desktop/challenge/seliaChat.JS/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/jessicaleon/Desktop/challenge/seliaChat.JS/src/App.vue","mtime":1661216192712},{"path":"/Users/jessicaleon/Desktop/challenge/seliaChat.JS/node_modules/css-loader/dist/cjs.js","mtime":1661216214185},{"path":"/Users/jessicaleon/Desktop/challenge/seliaChat.JS/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1661216214448},{"path":"/Users/jessicaleon/Desktop/challenge/seliaChat.JS/node_modules/postcss-loader/src/index.js","mtime":1661216214234},{"path":"/Users/jessicaleon/Desktop/challenge/seliaChat.JS/node_modules/cache-loader/dist/cjs.js","mtime":1661216214000},{"path":"/Users/jessicaleon/Desktop/challenge/seliaChat.JS/node_modules/vue-loader/lib/index.js","mtime":1661216214312}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmJvZHkgewogIG1hcmdpbjogMDsKfQoKQGZvbnQtZmFjZSB7CiAgZm9udC1mYW1pbHk6IExhdG87CiAgc3JjOiB1cmwoIi9mb250cy9MYXRvLVJlZ3VsYXIudHRmIik7Cn0KCiNhcHAgewogIGZvbnQtZmFtaWx5OiBMYXRvLCBBcmlhbCwgc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHg7Cn0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <select-username\n      v-if=\"!usernameAlreadySelected\"\n      @input=\"onUsernameSelection\"\n    />\n    <chat v-else />\n  </div>\n</template>\n\n<script>\nimport SelectUsername from \"./components/SelectUsername\";\nimport Chat from \"./components/Chat\";\nimport socket from \"./socket\";\n\nexport default {\n  name: \"App\",\n  components: {\n    Chat,\n    SelectUsername,\n  },\n  data() {\n    return {\n      usernameAlreadySelected: false,\n    };\n  },\n  methods: {\n    onUsernameSelection(username) {\n      this.usernameAlreadySelected = true;\n      socket.auth = { username };\n      socket.connect();\n    },\n  },\n  created() {\n    const sessionID = localStorage.getItem(\"sessionID\");\n\n    if (sessionID) {\n      this.usernameAlreadySelected = true;\n      socket.auth = { sessionID };\n      socket.connect();\n    }\n\n    socket.on(\"session\", ({ sessionID, userID }) => {\n      // attach the session ID to the next reconnection attempts\n      socket.auth = { sessionID };\n      // store it in the localStorage\n      localStorage.setItem(\"sessionID\", sessionID);\n      // save the ID of the user\n      socket.userID = userID;\n    });\n\n    socket.on(\"connect_error\", (err) => {\n      if (err.message === \"invalid username\") {\n        this.usernameAlreadySelected = false;\n      }\n    });\n  },\n  destroyed() {\n    socket.off(\"connect_error\");\n  },\n};\n</script>\n\n<style>\nbody {\n  margin: 0;\n}\n\n@font-face {\n  font-family: Lato;\n  src: url(\"/fonts/Lato-Regular.ttf\");\n}\n\n#app {\n  font-family: Lato, Arial, sans-serif;\n  font-size: 14px;\n}\n</style>\n"]}]}